{"version":3,"sources":["static/mountain.png","static/okean.png","static/polostrov.png","static/zemlya.png","static/sahara.png","static/reka.png","static/savollar.js","componentlar/viktorina_start.js","componentlar/Natija.js","App.js","utilitlar/sekundomer.js","reportWebVitals.js","index.js"],"names":["savollar","birinchi","ikkinchi","uchinchi","tortinchi","bechinchi","oltinchi","variyantlar","images","javoblar","Start","props","answer","i","Object","keys","push","useState","page","setPage","show","setShow","javob1","setJavob1","span","map","count","className","onClick","compareRandom","a","b","Math","random","viktorina","sav","style","backgroundImage","sort","variant","n","value","start","to","stopSet","Date","getTime","setJavob","Natija","natija","javob","vaqt","hours","minut","sec","mil","App","setStart","setVaqt","setNatija","setStop","t","time","v1","v2","floor","secundomer","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20515f8d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mountain.283c5b9c.png\";","export default __webpack_public_path__ + \"static/media/okean.04df7147.png\";","export default __webpack_public_path__ + \"static/media/polostrov.acfe4214.png\";","export default __webpack_public_path__ + \"static/media/zemlya.0c797c6f.png\";","export default __webpack_public_path__ + \"static/media/sahara.6d99fd82.png\";","export default __webpack_public_path__ + \"static/media/reka.1e158f77.png\";","import birinchi from './mountain.png'\r\nimport ikkinchi from './okean.png'\r\nimport uchinchi from './polostrov.png'\r\nimport tortinchi from './zemlya.png'\r\nimport bechinchi from './sahara.png'\r\nimport oltinchi from './reka.png'\r\n\r\nexport const savollar = {\r\n        birinchi: \"Dunyodagi eng baland tog` ?\",\r\n        ikkinchi: \"Eng katta Okean ?\",\r\n        uchinchi: \"Eng katta yarim orol ?\",\r\n        tortinchi: \"Eng katta materik ?\",\r\n        bechinchi: \" Dunyoda eng katta cho`l ?\",\r\n        oltinchi: \" Eng uzun daryo ? \"\r\n}\r\n\r\nexport const variyantlar = {\r\n        birinchi: [\"Himolay tog`i\",\" Tyanshan tog'i\", \"Alp tog'i\", \"Kavkaz tog'i\"],\r\n        ikkinchi: [ \"Tinch okeani\", \" Hind okeani\" , \"Shimoli muz okeani\", \"Atlantika okeani\" ],\r\n        uchinchi: [ \"Arabiston yarim oroli\", \"Hindi yarim oroli\", \"Kamchatka yarim oroli\", \"Skandinaviya yarim oroli\" ],\r\n        tortinchi: [ \"Yevrosiyo\", \"Afrika\", \" Antarktida\", \"Janubiy Amerika\" ],\r\n        bechinchi: [ \"Sahroi-Kabir\", \"Atakama\", \"Mirzacho'l\", \"Qizilqum\" ],\r\n        oltinchi: [ \"Nil\", \"Amazonka\", \"Kongo\", \"Sirdaryo\" ],\r\n}\r\nexport const images = {\r\n        birinchi,\r\n        ikkinchi,\r\n        uchinchi,\r\n        tortinchi,\r\n        bechinchi,\r\n        oltinchi\r\n}\r\n\r\nexport const javoblar = {\r\n        birinchi: \"Himolay tog`i\",\r\n        ikkinchi:  \"Tinch okeani\",\r\n        uchinchi:  \"Arabiston yarim oroli\",\r\n        tortinchi: \"Yevrosiyo\",\r\n        bechinchi:  \"Sahroi-Kabir\",\r\n        oltinchi: \"Nil\"\r\n}\r\n\r\n","import React, {useEffect, useState} from 'react'\r\nimport {NavLink, Redirect} from 'react-router-dom'\r\n\r\nimport {images} from '../static/savollar'\r\nimport {savollar} from '../static/savollar'\r\nimport {javoblar} from '../static/savollar'\r\nimport {variyantlar} from '../static/savollar'\r\nimport './viktorina.css'\r\n\r\n\r\nconst Start = (props) => {\r\n\r\n    let answer = []\r\n    for (const i in Object.keys(savollar)) {\r\n        answer.push('')\r\n    }\r\n\r\n    const [page, setPage] = useState(0)\r\n    const [show, setShow] = useState('none')\r\n\r\n    const [javob1, setJavob1] = useState(answer)\r\n\r\n    const setJavob = (n, value) => {\r\n\r\n        let newpage\r\n        if (page === 4) {\r\n            newpage = 0\r\n        } else {\r\n            newpage = page + 1\r\n        }\r\n        setPage(newpage)\r\n        answer = javob1\r\n        answer[n] = value\r\n        setJavob1(answer)\r\n\r\n    }\r\n    const span = Object.keys(savollar).map((i, count) => {\r\n        if (count === page) {\r\n            return <span className='dot active'></span>\r\n        }\r\n        return <span onClick={() => {\r\n            setPage(count)\r\n        }} className='dot'></span>\r\n    })\r\n\r\n\r\n    const compareRandom = (a, b) => {\r\n        return Math.random() - 0.5;\r\n    }\r\n\r\n    const viktorina = Object.keys(savollar).map(\r\n        (sav, count) => {\r\n            return <div style={{backgroundImage: `url(${images[sav]})`}} className={`savollar`}>\r\n                <div className='test'>\r\n                    <div className=\"numbertext\">{`${count + 1}/5`} </div>\r\n                    <div className={'savol'}>{savollar[sav]}</div>\r\n\r\n                    <ul>{variyantlar[sav].sort(compareRandom).map(variant => <li className={`variant${count + 1}`}\r\n                                                                                 onClick={() => {\r\n                                                                                     setJavob(count, variant)\r\n                                                                                 }}>{variant}</li>)}</ul>\r\n                </div>\r\n            </div>\r\n        }\r\n    )\r\n\r\n    return <div>{\r\n        !props.start ? <Redirect to='/'/>\r\n            :<div >\r\n                {viktorina[page]}\r\n                <div>\r\n                    <div className='zzz'>\r\n                        {span}\r\n                    </div>\r\n                    <div>\r\n                <span onClick={() => {\r\n                    let newpage = (page === 0) ? 4 : page - 1\r\n                    setPage(newpage)\r\n                }}>{'<'}</span>\r\n                        <span onClick={() => {\r\n                            let newpage = (page === 4) ? 0 : page + 1\r\n                            setPage(newpage)\r\n                        }}>{'>'}</span>\r\n                    </div>\r\n                    <div>\r\n                        <button className='showAns' onClick={() => {\r\n                            setShow('javoblar')\r\n                        }}>Javoblarim\r\n                        </button>\r\n                        <div className={show}>\r\n                            <div className={'close'} onClick={() => {\r\n                                setShow('none')\r\n                            }}>x\r\n                            </div>\r\n                            <ul>{javob1.map(value =><li>{value || \"javob belgilanmadi\"}</li> )}\r\n\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <NavLink to={'/natija'}>\r\n                    <button onClick={() => {\r\n                        props.stopSet(new Date().getTime())\r\n                        props.setJavob(javob1)\r\n                    }} className=\"StopButton\">\r\n                        Yakunlash\r\n                    </button></NavLink>\r\n\r\n\r\n            </div>\r\n    }</div>\r\n\r\n}\r\n\r\nexport default Start","import React from \"react\";\r\nimport \"./pre.css\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {javoblar} from '../static/savollar';\r\n\r\nconst Natija = (props) => {\r\n    return <div>{\r\n        !props.natija ? <Redirect to='/'/>\r\n        :\r\n            <div className='natija'>\r\n                <ul>\r\n                    {props.natija.map((javob, count )=> <li>{(javob === javoblar[Object.keys(javoblar)[count]]) ? \"To'g'ri \" : \"Notog'ri\"}</li> )}\r\n                    <div>\r\n\r\n                        {` Sizning natijangiz:  ${props.vaqt.hours}:${props.vaqt.minut}:${props.vaqt.sec}:${props.vaqt.mil} `}\r\n\r\n                    </div>\r\n                </ul>\r\n                <NavLink to='/'>\r\n                    <button className='pre'>Home</button>\r\n                </NavLink>\r\n            </div>\r\n\r\n    }\r\n    </div>\r\n}\r\n\r\nexport default Natija","import React, {useEffect, useState, useMemo} from \"react\";\nimport './App.css'\nimport secundomer from './utilitlar/sekundomer'\nimport Start from \"./componentlar/viktorina_start\";\nimport {NavLink, BrowserRouter, Route} from 'react-router-dom'\nimport Natija from \"./componentlar/Natija\";\n\n\nfunction App() {\n    const [start, setStart] = useState(0)\n    const [vaqt, setVaqt] = useState()\n    const [javob, setJavob] = useState()\n    const [natija, setNatija] = useState()\n\n    const setStop = (t) =>{\n        const time = secundomer(start, t)\n        setVaqt(time)\n    }\n\n    return (<BrowserRouter>\n\n            <div className={'container'}>\n                <div className=\"navbar\">Geografiyadan viktorina</div>\n                <div className='Container'>\n                    <Route path='/natija' component={()=><Natija natija={natija} vaqt={vaqt}  stopSet = {setStop} />}/>\n                    <Route path='/viktorina' component={()=><Start start={start} setJavob={setNatija}  stopSet = {setStop} />}/>\n                    <Route exact path='/' component={()=>{\n                        return <NavLink to={ '/viktorina'}> <button onClick={()=>{ setStart(new Date().getTime()) } } className=\"StartButton\"> Start</button></NavLink>\n                    }}/>\n                </div>\n\n\n            </div>\n\n        </BrowserRouter>\n    )\n}\n\nexport default App;\n","\r\nexport default (v1, v2) => {\r\n    const time = v2 - v1\r\n    const hours = Math.floor(time/1000/60/60)\r\n    const minut = Math.floor(time/1000/60)\r\n    const sec = Math.floor(time/1000)\r\n    const mil = Math.floor(time%1000)\r\n\r\n    return {hours, minut, sec, mil}\r\n\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}